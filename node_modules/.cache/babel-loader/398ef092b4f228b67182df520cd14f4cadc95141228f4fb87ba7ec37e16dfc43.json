{"ast":null,"code":"import * as Tone from \"tone\";\nexport const toneObject = Tone;\nexport const synth = new toneObject.PolySynth().toDestination();\nexport const toneTransport = toneObject.Transport;\nconst buffer1 = new Tone.Buffer(\"/edit/\");\nconst buffer2 = new Tone.Buffer(\"/\");\nconst buffer3 = new Tone.Buffer(\"/share/\");\nexport const gPart = new toneObject.Part((time, note) => {\n  guitar.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const fPart = new toneObject.Part((time, note) => {\n  frenchhorn.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const dPart = new toneObject.Part((time, note) => {\n  drums.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const pPart = new toneObject.Part((time, note) => {\n  piano.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\nexport const guitar = new toneObject.Sampler({\n  urls: {\n    \"F3\": \"F3.mp3\",\n    \"G1\": \"G1.mp3\",\n    \"G2\": \"G2.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"A1\": \"A1.mp3\",\n    \"A2\": \"A2.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"B1\": \"B1.mp3\",\n    \"B2\": \"B2.mp3\",\n    \"B3\": \"B3.mp3\",\n    \"C2\": \"C2.mp3\",\n    \"C3\": \"C3.mp3\",\n    \"C4\": \"C4.mp3\",\n    \"D1\": \"D1.mp3\",\n    \"D2\": \"D2.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"D4\": \"D4.mp3\",\n    \"E1\": \"E1.mp3\",\n    \"E2\": \"E2.mp3\",\n    \"E3\": \"E3.mp3\",\n    \"F1\": \"F1.mp3\",\n    \"F2\": \"F2.mp3\"\n  },\n  release: 1,\n  baseUrl: \"/samples/guitar-acoustic/\"\n}).toDestination();\nexport const piano = new toneObject.Sampler({\n  urls: {\n    \"F3\": \"F3.mp3\",\n    \"G1\": \"G1.mp3\",\n    \"G2\": \"G2.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"A1\": \"A1.mp3\",\n    \"A2\": \"A2.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"B1\": \"B1.mp3\",\n    \"B2\": \"B2.mp3\",\n    \"B3\": \"B3.mp3\",\n    \"C2\": \"C2.mp3\",\n    \"C3\": \"C3.mp3\",\n    \"C4\": \"C4.mp3\",\n    \"D1\": \"D1.mp3\",\n    \"D2\": \"D2.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"D4\": \"D4.mp3\",\n    \"E1\": \"E1.mp3\",\n    \"E2\": \"E2.mp3\",\n    \"E3\": \"E3.mp3\",\n    \"F1\": \"F1.mp3\",\n    \"F2\": \"F2.mp3\"\n  },\n  release: 1,\n  baseUrl: \"/samples/piano/\"\n}).toDestination();\nexport const frenchhorn = new toneObject.Sampler({\n  urls: {\n    \"F3\": \"F3.mp3\",\n    \"G1\": \"G1.mp3\",\n    \"G2\": \"G2.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"C2\": \"C2.mp3\",\n    \"C3\": \"C3.mp3\",\n    \"C4\": \"C4.mp3\",\n    \"D1\": \"D1.mp3\",\n    \"D2\": \"D2.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"F1\": \"F1.mp3\",\n    \"F2\": \"F2.mp3\",\n    \"D5\": \"D5.mp3\"\n  },\n  release: 1,\n  baseUrl: \"/samples/french-horn/\"\n}).toDestination();\nexport const drums = new toneObject.Sampler({\n  urls: {\n    \"C4\": \"drums1.mp3\",\n    \"D4\": \"drums2.mp3\",\n    \"E4\": \"drums3.mp3\",\n    \"F4\": \"drums4.mp3\",\n    \"G4\": \"drums5.mp3\",\n    \"A4\": \"drums6.mp3\",\n    \"B4\": \"drums7.mp3\"\n  },\n  release: 1,\n  baseUrl: \"/samples/drum/\"\n}).toDestination();","map":{"version":3,"names":["Tone","toneObject","synth","PolySynth","toDestination","toneTransport","Transport","buffer1","Buffer","buffer2","buffer3","gPart","Part","time","note","guitar","triggerAttackRelease","start","fPart","frenchhorn","dPart","drums","pPart","piano","Sampler","urls","release","baseUrl"],"sources":["/home/declan/Documents/gotecqfe/src/data/instruments.js"],"sourcesContent":["import * as Tone from \"tone\";\n\nexport const toneObject = Tone;\n\nexport const synth = new toneObject.PolySynth().toDestination();\n\nexport const toneTransport = toneObject.Transport;\n\nconst buffer1 = new Tone.Buffer(\"/edit/\");\nconst buffer2 = new Tone.Buffer(\"/\");\nconst buffer3 = new Tone.Buffer(\"/share/\");\n    \nexport const gPart = new toneObject.Part((time, note) => {\n    guitar.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const fPart = new toneObject.Part((time, note) => {\n    frenchhorn.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const dPart = new toneObject.Part((time, note) => {\n    drums.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const pPart = new toneObject.Part((time, note) => {\n    piano.triggerAttackRelease(note, \"8n\", time);\n}, []).start(0);\n\nexport const guitar = new toneObject.Sampler({\n    urls: {\n    \"F3\": \"F3.mp3\",\n    \"G1\": \"G1.mp3\",\n    \"G2\": \"G2.mp3\",\n    \"G3\": \"G3.mp3\",\n    \"A1\": \"A1.mp3\",\n    \"A2\": \"A2.mp3\",\n    \"A3\": \"A3.mp3\",\n    \"B1\": \"B1.mp3\",\n    \"B2\": \"B2.mp3\",\n    \"B3\": \"B3.mp3\",\n    \"C2\": \"C2.mp3\",\n    \"C3\": \"C3.mp3\",\n    \"C4\": \"C4.mp3\",\n    \"D1\": \"D1.mp3\",\n    \"D2\": \"D2.mp3\",\n    \"D3\": \"D3.mp3\",\n    \"D4\": \"D4.mp3\",\n    \"E1\": \"E1.mp3\",\n    \"E2\": \"E2.mp3\",\n    \"E3\": \"E3.mp3\",\n    \"F1\": \"F1.mp3\",\n    \"F2\": \"F2.mp3\",\n    },\n    release: 1,\n    baseUrl: \"/samples/guitar-acoustic/\"\n    }).toDestination();\n\n\n    export const piano = new toneObject.Sampler({\n        urls: {\n        \"F3\": \"F3.mp3\",\n        \"G1\": \"G1.mp3\",\n        \"G2\": \"G2.mp3\",\n        \"G3\": \"G3.mp3\",\n        \"A1\": \"A1.mp3\",\n        \"A2\": \"A2.mp3\",\n        \"A3\": \"A3.mp3\",\n        \"B1\": \"B1.mp3\",\n        \"B2\": \"B2.mp3\",\n        \"B3\": \"B3.mp3\",\n        \"C2\": \"C2.mp3\",\n        \"C3\": \"C3.mp3\",\n        \"C4\": \"C4.mp3\",\n        \"D1\": \"D1.mp3\",\n        \"D2\": \"D2.mp3\",\n        \"D3\": \"D3.mp3\",\n        \"D4\": \"D4.mp3\",\n        \"E1\": \"E1.mp3\",\n        \"E2\": \"E2.mp3\",\n        \"E3\": \"E3.mp3\",\n        \"F1\": \"F1.mp3\",\n        \"F2\": \"F2.mp3\",\n        },\n        release: 1,\n        baseUrl: \"/samples/piano/\"\n        }).toDestination();\n\n\n        export const frenchhorn = new toneObject.Sampler({\n            urls: {\n            \"F3\": \"F3.mp3\",\n            \"G1\": \"G1.mp3\",\n            \"G2\": \"G2.mp3\",\n            \"G3\": \"G3.mp3\",\n            \"A3\": \"A3.mp3\",\n            \"C2\": \"C2.mp3\",\n            \"C3\": \"C3.mp3\",\n            \"C4\": \"C4.mp3\",\n            \"D1\": \"D1.mp3\",\n            \"D2\": \"D2.mp3\",\n            \"D3\": \"D3.mp3\",\n            \"F1\": \"F1.mp3\",\n            \"F2\": \"F2.mp3\",\n            \"D5\": \"D5.mp3\",\n            },\n            release: 1,\n            baseUrl: \"/samples/french-horn/\"\n            }).toDestination();\n\n\n            export const drums = new toneObject.Sampler({\n                urls: {\n                \"C4\": \"drums1.mp3\",\n                \"D4\": \"drums2.mp3\",\n                \"E4\": \"drums3.mp3\",\n                \"F4\": \"drums4.mp3\",\n                \"G4\": \"drums5.mp3\",\n                \"A4\": \"drums6.mp3\",\n                \"B4\": \"drums7.mp3\",\n                },\n                release: 1,\n                baseUrl: \"/samples/drum/\"\n                }).toDestination();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}